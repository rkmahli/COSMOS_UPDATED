package demo.cosmos.core.policy.dao.entity;
// Generated Nov 14, 2018 7:02:50 PM by Hibernate Tools 5.2.10.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Relationship generated by hbm2java
 */
@Entity
@Table(name="relationship"
    ,catalog="test"
)
public class Relationship  implements java.io.Serializable {


     private Integer relationid;
     private String type;
     private Set<BeneficiaryInfo> beneficiaryInfosForRelationNominee = new HashSet<BeneficiaryInfo>(0);
     private Set<BeneficiaryInfo> beneficiaryInfosForRelationProposer = new HashSet<BeneficiaryInfo>(0);

    public Relationship() {
    }

    public Relationship(String type, Set<BeneficiaryInfo> beneficiaryInfosForRelationNominee, Set<BeneficiaryInfo> beneficiaryInfosForRelationProposer) {
       this.type = type;
       this.beneficiaryInfosForRelationNominee = beneficiaryInfosForRelationNominee;
       this.beneficiaryInfosForRelationProposer = beneficiaryInfosForRelationProposer;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="relationid", unique=true, nullable=false)
    public Integer getRelationid() {
        return this.relationid;
    }
    
    public void setRelationid(Integer relationid) {
        this.relationid = relationid;
    }

    
    @Column(name="Type", length=100)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="relationshipByRelationNominee")
    public Set<BeneficiaryInfo> getBeneficiaryInfosForRelationNominee() {
        return this.beneficiaryInfosForRelationNominee;
    }
    
    public void setBeneficiaryInfosForRelationNominee(Set<BeneficiaryInfo> beneficiaryInfosForRelationNominee) {
        this.beneficiaryInfosForRelationNominee = beneficiaryInfosForRelationNominee;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="relationshipByRelationProposer")
    public Set<BeneficiaryInfo> getBeneficiaryInfosForRelationProposer() {
        return this.beneficiaryInfosForRelationProposer;
    }
    
    public void setBeneficiaryInfosForRelationProposer(Set<BeneficiaryInfo> beneficiaryInfosForRelationProposer) {
        this.beneficiaryInfosForRelationProposer = beneficiaryInfosForRelationProposer;
    }




}


